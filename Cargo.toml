[package]
name = "dvf"
version = "1.1.0"
authors = ["Zico <zhicong303@gmail.com"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
aes-gcm = "0.10.3"
array-init = "2.0.0"
async-trait = "0.1.51"
base64 = "0.13.0"
bincode = "1.3.1"
blst = "0.3.3"
bytes = "1.0.1"
chrono = "0.4.20"
clap = { version = "4.5.4", features = ["cargo", "wrap_help"] }
dirs = "3.0.1"
downcast-rs = "1.2.0"
env_logger = "0.8.2"
ethereum_hashing = "0.6.0"
ethereum_serde_utils = "0.5.2"
exit-future = "0.2.0"
futures = "0.3.28"
hex = "0.4.2"
hyper = "0.14.4"
itertools = "0.10.0"
keccak-hash = "0.10.0"
lazy_static = "1.4.0"
libsecp256k1 = "0.7.0"
log = "0.4.0"
miracl_core = { version = "2.7.0", features = ["bls12381"] }
multiaddr = { version = "0.17.1" }
num-bigint = { version = "0.4.0", features = ["rand"] }
num-traits = "0.2.8"
parking_lot = { version = "0.12.0", features = ["send_guard"] }
pbkdf2 = { version = "0.8.0", default-features = false }
rand = { version = "0.8.5", features = ["small_rng"] }
rayon = "1.4.1"
regex = "1.5.5"
reqwest = { version = "0.11.0", features = ["json", "stream"] }
ring = "0.16.19"
rpassword = "5.0.0"
rusqlite = "0.28.0"
scrypt = { version = "0.7.0", default-features = false }
secp256k1 = { version = "0.24.0", features = ["alloc", "rand", "serde"] }
serde = "1.0.116"
serde_derive = "1.0.116"
serde_json = "1.0.58"
serde_yaml = "0.8.13"
sha2 = "0.9.2"
sha256 = "1.0.3"
slog = { version = "2.5.2", features = ["max_level_trace", "release_max_level_trace"] }
subtle = "2.5"
strum = { version = "0.24", features = ["derive"] }
tempfile = "3.1.0"
tokio = { version = "1.26.0", features = ["time", "rt-multi-thread", "tracing"] }
tokio-util = { version = "0.7.7", features = ["codec"] }
tracing = "0.1"
tracing-appender = "0.2"
tracing-core = "0.1"
tracing-log = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-test = "0.2.4"
tree_hash = "0.6"
tree_hash_derive = "0.6"
url = "2.2.2"
warp = { version = "0.3.7", default-features = false, features = ["tls"] }
web3 = "0.19.0"
zeroize = { version = "1.4.2", features = ["zeroize_derive"] }

# Local crates.
account_manager = { "path" = "lighthouse/account_manager" }
account_utils = { path = "lighthouse/common/account_utils" }
beacon_node = { path = "lighthouse/beacon_node" }
bls = { path = "lighthouse/crypto/bls" }
boot_node = { path = "lighthouse/boot_node" }
clap_utils = { path = "lighthouse/common/clap_utils" }
database_manager = { path = "lighthouse/database_manager" }
deposit_contract = { path = "lighthouse/common/deposit_contract" }
directory = { path = "lighthouse/common/directory" }
dvf_directory = { path = "common/dvf_directory" }
dvf_version = { path = "common/dvf_version" }
environment = { path = "lighthouse/lighthouse/environment" }
eth2 = { path = "lighthouse/common/eth2" }
eth2_keystore = { path = "lighthouse/crypto/eth2_keystore" }
eth2_network_config = { path = "lighthouse/common/eth2_network_config" }
eth2_wallet = { path = "lighthouse/crypto/eth2_wallet" }
filesystem = { path = "lighthouse/common/filesystem" }
lighthouse_metrics = { path = "lighthouse/common/lighthouse_metrics" }
lighthouse_network = { path = "lighthouse/beacon_node/lighthouse_network"}
lighthouse_version = { path = "lighthouse/common/lighthouse_version" }
lockfile = { path = "lighthouse/common/lockfile" }
malloc_utils = { path = "lighthouse/common/malloc_utils" }
monitoring_api = { path = "lighthouse/common/monitoring_api" }
safe_arith = { path = "lighthouse/consensus/safe_arith" }
sensitive_url = { path = "lighthouse/common/sensitive_url" }
slashing_protection = { path = "lighthouse/validator_client/slashing_protection" }
slot_clock = { path = "lighthouse/common/slot_clock" }
task_executor = { path = "lighthouse/common/task_executor" }
types = { path = "lighthouse/consensus/types" }
validator_dir = { path = "lighthouse/common/validator_dir", features = ["insecure_keys"] }
warp_utils = { path = "lighthouse/common/warp_utils" }

consensus = { path = "hotstuff/consensus" }
hsconfig = { path = "hotstuff/config", package = "hotstuff_config" }
hscrypto = { path = "hotstuff/crypto", package = "crypto" }
hsutils = { path = "hotstuff/utils", package = "utils" }
mempool = { path = "hotstuff/mempool" }
network = { path = "hotstuff/network" }
store = { path = "hotstuff/store" }

[patch]
[patch.crates-io]
# fixed-hash = { git = "https://github.com/paritytech/parity-common", rev = "df638ab0885293d21d656dc300d39236b69ce57d" }
# warp = { git = "https://github.com/macladson/warp", rev = "7e75acc368229a46a236a8c991bf251fe7fe50ef" }
# eth2_ssz = { path = "lighthouse/consensus/ssz" }
# eth2_ssz_derive = { path = "lighthouse/consensus/ssz_derive" }
# eth2_ssz_types = { path = "lighthouse/consensus/ssz_types" }
# eth2_hashing = { path = "lighthouse/crypto/eth2_hashing" }
# tree_hash = { path = "lighthouse/consensus/tree_hash" }
# tree_hash_derive = { path = "lighthouse/consensus/tree_hash_derive" }
# eth2_serde_utils = { path = "lighthouse/consensus/serde_utils" }
# arbitrary = { git = "https://github.com/michaelsproul/arbitrary", rev = "a572fd8743012a4f1ada5ee5968b1b3619c427ba" }

# [patch."https://github.com/ralexstokes/mev-rs"]
# mev-rs = { git = "https://github.com/ralexstokes//mev-rs", rev = "7813d4a4a564e0754e9aaab2d95520ba437c3889" }
# [patch."https://github.com/ralexstokes/ethereum-consensus"]
# ethereum-consensus = { git = "https://github.com/ralexstokes//ethereum-consensus", rev = "9b0ee0a8a45b968c8df5e7e64ea1c094e16f053d" }
# [patch."https://github.com/ralexstokes/ssz-rs"]
# ssz-rs = { git = "https://github.com/ralexstokes//ssz-rs", rev = "adf1a0b14cef90b9536f28ef89da1fab316465e1" }



[features]
default = ["hotstuff_committee"]
fake_committee = []
hotstuff_committee = []

[dev-dependencies]
tokio-test = "*"

